function doPost(e){const t=JSON.parse(e.postData.contents),s=SpreadsheetApp.getActiveSpreadsheet(),a=s.getSheetByName("Data"),r=a.getDataRange().getValues()[0],n=a.getDataRange().getValues(),i=t.action;if(t.image&&!i&&t.filename){const e=getOrCreateFolder("ImagesUpload"),a=t.filename,r=a.includes(".")?a.split(".").pop():"",n=a.replace(/\.[^/.]+$/,"");let i=a,o=1;for(;e.getFilesByName(i).hasNext();)i=n+"-"+o+(r?"."+r:""),o++;const u=t.image.match(/^data:(.+);base64,/)[1],g=t.image.replace(/^data:.+;base64,/,""),c=Utilities.newBlob(Utilities.base64Decode(g),u,i),d=e.createFile(c);d.setSharing(DriveApp.Access.ANYONE_WITH_LINK,DriveApp.Permission.VIEW);const l=d.getUrl(),p=s.getSheetByName("Images"),m=Utilities.getUuid(),f=(new Date).toISOString();return p.appendRow([m,f,i,l]),respond({status:"success",image_uuid:m,filename:i,url:l})}if("delete_image"===i){const a=t.id,r=s.getSheetByName("Images"),n=r.getDataRange().getValues();for(let t=1;t<n.length;t++)if(n[t][0]===a){const s=n[t][3].match(/[-\w]{25,}/)?.[0];if(s)try{DriveApp.getFileById(s).setTrashed(!0)}catch(e){}return r.deleteRow(t+1),respond({status:"success",deleted:a})}return respond({status:"error",message:"Image UUID not found"})}if("add"===i){const e=Utilities.getUuid(),s=(new Date).toISOString(),n=new Array(r.length).fill("");n[0]=e,n[1]=s,n[2]=s;for(let e in t.values){const s=r.indexOf(e);-1!==s&&(n[s]=t.values[e])}return a.appendRow(n),respond({status:"success",action:i,uuid:e})}if("update"===i){const e=t.id,s=n.findIndex(((t,s)=>s>0&&t[0]===e));if(-1===s)return respond({status:"error",message:"UUID not found"});a.getRange(s+1,3).setValue((new Date).toISOString());for(let e in t.values){const n=r.indexOf(e);-1!==n&&a.getRange(s+1,n+1).setValue(t.values[e])}return respond({status:"success",action:i,uuid:e})}if("delete"===i){const e=t.id,s=n.findIndex(((t,s)=>s>0&&t[0]===e));return-1===s?respond({status:"error",message:"UUID not found"}):(a.deleteRow(s+1),respond({status:"success",action:i,uuid:e}))}return respond({status:"error",message:"Invalid action"})}function doGet(e){if(!e||!e.parameter)return respond({status:"error",message:"No parameters provided"});const t=SpreadsheetApp.getActiveSpreadsheet();if("true"===e.parameter.images){const e=t.getSheetByName("Images").getDataRange().getValues(),s=e[0],a=e.slice(1).map((e=>{const t={};return s.forEach(((s,a)=>t[s]=e[a])),t}));return respond({status:"success",count:a.length,images:a})}if(e.parameter.image_uuid){const s=t.getSheetByName("Images").getDataRange().getValues(),a=s[0];for(let t=1;t<s.length;t++)if(s[t][0]===e.parameter.image_uuid){const e={};return a.forEach(((a,r)=>e[a]=s[t][r])),respond({status:"success",image:e})}return respond({status:"error",message:"Image UUID not found"})}const s=t.getSheetByName("Data"),a=t.getSheetByName("Images").getDataRange().getValues(),r=a[0],n={};for(let e=1;e<a.length;e++){const t={};r.forEach(((s,r)=>t[s]=a[e][r])),n[a[e][0]]=t}const i=s.getDataRange().getValues(),o=i[0],u=e.parameter.uuid,g=i.slice(1).filter((e=>!u||e[0]===u)).map(((e,t)=>{const s={rowIndex:t+2};o.forEach(((t,a)=>s[t]=e[a]));const a=s.image_uuid;return s.image=n[a]||null,s})),c=userCanEdit(s);return u&&0===g.length?respond({status:"error",message:"UUID not found"}):respond(u?{status:"success",row:g[0],canEdit:c}:{status:"success",count:g.length,rows:g,canEdit:c})}function userCanEdit(e){const t=e.getEditors().map((e=>e.getEmail())),s=Session.getEffectiveUser().getEmail();return t.includes(s)}function respond(e){return ContentService.createTextOutput(JSON.stringify(e)).setMimeType(ContentService.MimeType.JSON)}function getOrCreateFolder(e){const t=DriveApp.getFoldersByName(e);return t.hasNext()?t.next():DriveApp.createFolder(e)}